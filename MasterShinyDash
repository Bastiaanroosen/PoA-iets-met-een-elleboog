## app.R ##
library(shiny)
library(shinydashboard)
library(plotly)

#Jurgen 4) Als gebruiker wil ik kunnen zien wat de invloed is van de waterstanden op de ligtijd, 
#zodat ik weet of en zo ja wanneer ik er rekening mee moet houden dat boten een grotere kans hebben op vertraging.

ui <- dashboardPage(
  dashboardHeader(title = "POA Ligtijden"),
  dashboardSidebar(
    
    sidebarMenu(
      menuItem("Waterstanden vs ligtijden", icon = icon("dashboard"), tabName = "Waterstanden",
               badgeLabel = " ", badgeColor = "green"),
      menuItem("Traffic in the PoA", icon = icon("dashboard"), tabName = "Traffic",
               badgeLabel = " ", badgeColor = "green"),
      menuItem("tab3", icon = icon("dashboard"), tabName = "tab3",
               badgeLabel = " ", badgeColor = "green"),
      menuItem("waterstanden per periode", icon = icon("dashboard"), tabName = "waterstperiode",
               badgeLabel = " ", badgeColor = "green"),
      menuItem("tab5", icon = icon("dashboard"), tabName = "tab5",
               badgeLabel = " ", badgeColor = "green")
      
    )
    
  ),
  dashboardBody(
    
    #tabs
    tabItems(
      #tab1
      tabItem(tabName = "Waterstanden",
              h2("Waterstanden vs ligtijden"),
              fluidRow(
                box(plotlyOutput("waterst")), box(plotlyOutput("ltijden"))
              ),
              
              fluidRow(box(sliderInput("month", "Data per maand", 1,10,1,1)))
      ),
      #tab2
      tabItem(tabName = "Traffic",
              h2("Traffic in the Port of Amsterdam - Binnenvaartschepen"),
              #####
              #####Xanne####
              fluidRow(box(# Output: Table summarizing the values entered ----
                           plotOutput("sliderdate"))),
              fluidRow(box(# Input: select date range over the period 1-1-2018 until 31-10-2018
                sliderInput("sliderdate", "Selecte date range",
                            min = as.Date("2018-01-01"),
                            max = as.Date("2018-10-31"),
                            value= c(as.Date("2018-01-01"), as.Date("2018-10-31")), width = 600),
                
                #checkboxGroupInput(inputId = "selecttraf",                                                                               
                #                 label = h4("Select type of traffic"),                                                                       
                #                 choices = c("Arrivals", "Departures", "In Harbour")
                #                 selected = c("Arrivals", "Departures", "In Harbour")),
                
                
                # Input: select type of traffic (pleziervaart or vracht)
                selectInput(inputId = "selectship", 
                            label = "Select type of shipping", 
                            choices = c("Pleziervaart", "Vracht", "Combined"), 
                            selected = "Combined", 
                            multiple = FALSE, width = 300
                )))
              #####Xanne#####
              #####
      ),
      #tab3
      tabItem(tabName = "tab3",
              h2("tab3")
              #####
              
              #####
              
      ),
      
      #tab4
      tabItem(tabName = "waterstperiode",
              h2("Waterstanden per periode"),
              #####Jacques#####
              
              fluidRow(box(selectInput('xcol', 'Datum', width = 300, names(df_tijden),
                                       selected = names(df_tijden)[[1]]),
                           selectInput('ycol', 'Locaties', width = 300, names(df_havens),
                                       selected = names(df_havens)[[1]]),
                           sliderInput("maand", "Data per maand", width = 300, 1,10,1,1)
              ),box((plotlyOutput('plot1'))),
              
              fluidRow(box(),box(plotlyOutput('plot2')))) 
              #####Jacques#####
              
      ),
      
      #tab5
      tabItem(tabName = "tab5",
              h2("tab5")
              #####
              
              #####
              
      )
      
    )
    
    
  )
)

server <- function(input, output) {
  
  
  output$waterst <- renderPlotly({
    
    
    month <- switch(
      input$month,
      jan,
      feb,
      mar,
      apr,
      may,
      jun,
      jul,
      aug,
      sep,
      oct,
    )
    
    water  <- ggplot(month, aes(x= datumtijdstart, y= start_HAVENMEAN)) + geom_line()
  })
  
  output$ltijden <- renderPlotly({
    
    month <- switch(
      input$month,
      jan,
      feb,
      mar,
      apr,
      may,
      jun,
      jul,
      aug,
      sep,
      oct,
    )
    
    tijden  <- ggplot(month, aes(datumtijdstart, hoursberth)) + geom_point()
  })
  
  #####Xanne#####
  
  # Reactive expression to create data frame of all input values ----
  # sliderValues <- reactive({
  
  
  
  # })
  
  # Show the values in an HTML table ----
  output$sliderdate <- renderPlot({
    
    # https://stackoverflow.com/questions/45261084/ggplot2-with-reactive-geom-lines
    
    
    ggplot(graph) +
      geom_line(aes(x=graph$Date, y=switch(input$selectship,
                                           Combined = graph$Number_of_Ships,
                                           Pleziervaart = graph$Number_of_plezier,
                                           Vracht = graph$Number_of_vracht
      ), group=graph$trafftype, color=trafftype))+ 
      xlim(as.Date(input$sliderdate[1]), as.Date(input$sliderdate[2]))
    
  })
  
  #####Xanne#####
  
  #####Jacques#####
  output$plot1 <- renderPlotly({
    p <- ggplot(waterstanden_jac_clean, aes(x=waterstanden_jac_clean[ , input$xcol],y= waterstanden_jac_clean[ , input$ycol])) + geom_line()
    p + labs(x = "Datum", y = "Locatie" )
  })
  
  output$plot2 <- renderPlotly({
    maand <- switch(
      input$maand,
      m01,
      m02,
      m03,
      m04,
      m05,
      m06,
      m07,
      m08,
      m09,
      m10
    )
    p <- ggplot(maand, aes(x=maand[ , input$xcol],y= maand[ , input$ycol])) + geom_line()
    p + labs(x = "Datum", y = "Locatie" )
  })
  #####Jacques#####
}

shinyApp(ui, server)
